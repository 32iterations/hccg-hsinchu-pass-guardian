name: Performance Monitoring

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 6 * * *' # Daily at 6 AM

jobs:
  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check if frontend build exists
        id: check_build
        run: |
          if [ -d "build" ] || [ -d "dist" ] || [ -d "public" ]; then
            echo "frontend_exists=true" >> $GITHUB_OUTPUT
            if [ -d "build" ]; then
              echo "build_dir=build" >> $GITHUB_OUTPUT
            elif [ -d "dist" ]; then
              echo "build_dir=dist" >> $GITHUB_OUTPUT
            else
              echo "build_dir=public" >> $GITHUB_OUTPUT
            fi
          else
            echo "frontend_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build frontend (if exists)
        if: steps.check_build.outputs.frontend_exists == 'true'
        run: npm run build || echo "No build script found"

      - name: Serve frontend application
        if: steps.check_build.outputs.frontend_exists == 'true'
        run: |
          npx serve -s ${{ steps.check_build.outputs.build_dir }} -l 3000 &
          sleep 10

      - name: Serve backend API (fallback)
        if: steps.check_build.outputs.frontend_exists != 'true'
        run: |
          # Check if backend can be started
          if [ -f "src/backend/server.js" ]; then
            cd src/backend && npm install && node server.js &
          elif [ -f "backend/server.js" ]; then
            cd backend && npm install && node server.js &
          else
            # Create a simple static page for Lighthouse to audit
            mkdir -p temp_public
            echo '<html><head><title>API Server</title></head><body><h1>API Server Running</h1><p>This is a backend API project.</p></body></html>' > temp_public/index.html
            npx serve -s temp_public -l 3000 &
          fi
          sleep 10

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results-${{ github.sha }}
          path: .lighthouseci/

  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Analyze bundle size
        run: |
          npm install -g webpack-bundle-analyzer
          npm run build
          # Add bundle analysis commands here

      - name: Comment bundle size on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            // Add bundle size comparison logic
            console.log('Bundle size analysis completed');